{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createMemoryHistory = require('history/createMemoryHistory');\n\nvar _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);\n\nvar _PropTypes = require('./PropTypes');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Manages session history using in-memory storage.\n */\n\n\nvar MemoryHistory = function (_React$Component) {\n  _inherits(MemoryHistory, _React$Component);\n\n  function MemoryHistory() {\n    _classCallCheck(this, MemoryHistory);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  MemoryHistory.prototype.getChildContext = function getChildContext() {\n    return {\n      history: this.history\n    };\n  };\n\n  MemoryHistory.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    var _props = this.props,\n        getUserConfirmation = _props.getUserConfirmation,\n        initialEntries = _props.initialEntries,\n        initialIndex = _props.initialIndex,\n        keyLength = _props.keyLength;\n    this.history = (0, _createMemoryHistory2.default)({\n      getUserConfirmation: getUserConfirmation,\n      initialEntries: initialEntries,\n      initialIndex: initialIndex,\n      keyLength: keyLength\n    }); // Do this here so we catch actions in cDM.\n\n    this.unlisten = this.history.listen(function () {\n      return _this2.forceUpdate();\n    });\n  };\n\n  MemoryHistory.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unlisten();\n  };\n\n  MemoryHistory.prototype.render = function render() {\n    var children = this.props.children;\n    return typeof children === 'function' ? children(this.history) : _react2.default.Children.only(children);\n  };\n\n  return MemoryHistory;\n}(_react2.default.Component);\n\nMemoryHistory.propTypes = {\n  getUserConfirmation: _react.PropTypes.func,\n  initialEntries: _react.PropTypes.array,\n  initialIndex: _react.PropTypes.number,\n  keyLength: _react.PropTypes.number,\n  children: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.func]).isRequired\n};\nMemoryHistory.childContextTypes = {\n  history: _PropTypes.history.isRequired\n};\nexports.default = MemoryHistory;","map":null,"metadata":{},"sourceType":"script"}