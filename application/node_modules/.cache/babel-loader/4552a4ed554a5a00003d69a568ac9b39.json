{"ast":null,"code":"import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\nexport var userActions = {\n  login: login,\n  logout: logout,\n  register: register,\n  getAll: getAll,\n  delete: _delete\n};\n\nfunction login(username, password) {\n  return function (dispatch) {\n    dispatch(request({\n      username: username\n    }));\n    userService.login(username, password).then(function (user) {\n      dispatch(success(user));\n      history.push('/');\n    }, function (error) {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return function (dispatch) {\n    dispatch(request(user));\n    userService.register(user).then(function (user) {\n      dispatch(success());\n      history.push('/login');\n      dispatch(alertActions.success('Registration successful'));\n    }, function (error) {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAll() {\n  return function (dispatch) {\n    dispatch(request());\n    userService.getAll().then(function (users) {\n      return dispatch(success(users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    userService.delete(id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/home/malshanw/Documents/ColaProjects/orderapp/application/src/_actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","userActions","login","logout","register","getAll","delete","_delete","username","password","dispatch","request","then","user","success","push","error","failure","toString","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push('/');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/login');\n                    dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}